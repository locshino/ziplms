services:
    laravel:
        build:
            context: ./docker/${PHP_VERSION}
            dockerfile: Dockerfile
            args:
                WWWUSER: "${WWWUSER}"
                WWWGROUP: "${WWWGROUP}"
        image: sail-${PHP_VERSION}-app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT}:80"
            - "${VITE_PORT}:${VITE_PORT}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
            - "sail-backups:/var/www/html/${BACKUP_DIRECTORY}"
        networks:
            - sail
        depends_on:
            - mysql
            - redis

    mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "${DB_PORT}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 0
        volumes:
            - "sail-mysql:/var/lib/mysql"
            - "./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s

    redis:
        image: "redis:alpine"
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    worker-default:
        image: sail-${PHP_VERSION}-app
        command: "php artisan queue:work ${QUEUE_CONNECTION} --queue=${QUEUE_NAME} --sleep=3 --tries=3"
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - laravel
            - mysql
            - redis

    worker-media:
        image: sail-${PHP_VERSION}-app
        command: "php artisan queue:work ${QUEUE_MEDIA_CONNECTION} --queue=${QUEUE_MEDIA_NAME} --sleep=3 --tries=3"
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - laravel
            - mysql
            - redis

    worker-batch:
        image: sail-${PHP_VERSION}-app
        command: "php artisan queue:work ${QUEUE_BATCH_CONNECTION} --queue=${QUEUE_BATCH_NAME} --sleep=3 --tries=3"
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - laravel
            - mysql
            - redis

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-backups:
        driver: local
